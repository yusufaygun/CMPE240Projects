Prelab

int a = 0b00; // 2-bit unsigned integer
int b = 0b00; // 2-bit unsigned integer
int c = 0b00; // 2-bit unsigned integer

if (a < 1) and (b < 3):
	c = 0b00
else if (a ^ b) < 2: // ^ means xor
	c = 0b01
else if a > b:
	c = 0b10
else:
	c = 0b11


Fill in the truth table. Change XX values to 00, 01, 10 or 11.

a1a0b1b0 	c1c0
0000 		00
0001 		00
0010 		00
0011 		01
0100 		10
0101 		11
0110 		01
0111 		01
1000 		01
1001 		01
1010 		11
1011 		11
1100 		01
1101 		01
1110 		10
1111 		11

You can use pqrs. Using a0a1b0b1 will be harder to read. Use p'q'r's' for prime forms.

Used form: PoS
c0 = (p+q+r+s)(p+q+r+s')(p+q+r'+s)(p+q'+r+s)(p'+q'+r'+s)

Used form: SoP
c1 = (p'qr's') + (p'qr's) + (pq'rs') + (pq'rs) + (pqrs') + (pqrs)


Minimize c0
c0 = (p+q+r+s) (p+q+r+s') (p+q+r'+s) (p+q'+r+s) (p'+q'+r'+s) 
c0 = ((p+q+r)+ss') (p+q+r'+s) (p+q'+r+s) (p'+q'+r'+s)     (distributivity)
c0 = ((p+q+r)+1) (p+q+r'+s) (p+q'+r+s) (p'+q'+r'+s)       (complement)
c0 = (p+q+r) (p+q+r'+s) (p+q'+r+s) (p'+q'+r'+s)           (identity)
c0 = (p+q+r) (p+q+r'+s) (p+q'+r+s) (p'+q'+r'+s) (p+q+r+s) //add (p+q+r+s) again
c0 = (p+q+r) ((p+q+s) + rr') (p+q'+r+s) (p'+q'+r'+s)      (distributivity)
c0 = (p+q+r) ((p+q+s) + 1) (p+q'+r+s) (p'+q'+r'+s)        (complement)
c0 = (p+q+r) (p+q+s) (p+q'+r+s) (p'+q'+r'+s)              (identity)
c0 = (p+q+r) (p+q+s) (p+q'+r+s) (p'+q'+r'+s) (p+q+r+s)    //add (p+q+r+s) again 
c0 = (p+q+r) (p+q+s) ((p+r+s)+qq') (p'+q'+r'+s)           (distributivity)
c0 = (p+q+r) (p+q+s) ((p+r+s)+1) (p'+q'+r'+s)             (complement)
c0 = (p+q+r) (p+q+s) (p+r+s) (p'+q'+r'+s)                 (identity)

Minimize c1
c1 = (p'qr's') + (p'qr's) + (pq'rs') + (pq'rs) + (pqrs') + (pqrs)
c1 = p'(qr's' + qr's) + p(q'rs' + q'rs + qrs' + qrs)  (distributivity)
c1 = p'q(r's' + r's) + pr(q's' + q's + qs' + qs)      (distributivity)
c1 = p'qr'(s' + s) + pr(q'(s' + s) + q(s' + s))       (distributivity)
c1 = p'qr'(1) + pr(q'(1) + q(1))                      (complement)
c1 = p'qr' + pr(q' + q)                               (identity)
c1 = p'qr' + pr(1)                                    (complement) 
c1 = p'qr' + pr	                                      (identity)

